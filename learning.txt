
React Module.

1. What is React and Why React ?
    => Done.
2. Main features of react. => Done.
    => Component-based web development.
    => Set of HTML/CSS/JS which can be reused.
    => JSX. [JavaScript+HTML] => JS Extension.
    => Virtual DOM.
    => SPA. [Single Page Application]


3. How to create a project. - Done
4. Hwo React Starts - Done.
    

4. How to run project. - Done.
5. Folders and file structures. - Done.
6. Components. - Done.
6.1 NPM
7. JSX.-Data Binding, Conditional Rendering.
8. Virtual DOM
9. Lifecycle hooks.-useState
10. States.
11. Props.
12. Event handling.
13. Data passing.
14. Event Passing.
15. Why Context API.
16. Implement context api.
17. Why redux
18. HOw redux is implemented.
19. Routers and Navigations.
20. Styling components.
21. HTTP Calls./API Calls.
22. Data Binding.
23. Form Validation library.



DOM => Tree. Heavy Structure.
DOM Manipulation=> Expensive operations.



NPM => Node Package Manager.

manage packages.
    => Stores them.
    => updates them by managing different versions.
    => Manage removals of pakcages.
    => manages execution.
    => manage installation.

Java => Maven.
.Net, C# => Nuget.
Python => pip.
JS(Node, React, Angular) => NPM, YARN



Async=> Get data.
Component prepares-> Renders.=> Rendered.

-------Async Starts.------------------------------------------Data fetched.
-------COmponent rendering Starts----- rendered-----productsState.

Creation.
Rendering/MOunting.[Start, End]
useState [States in React].

State => 
1. box which contains data
2. refreshes your component.
3. Allows data to survive.

Destroy,